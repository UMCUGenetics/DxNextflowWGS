params {
    genome = '/hpc/diaggen/projects/wgs_refactor/ref_genome/Homo_sapiens.GRCh37.GATK.illumina.fasta'
    dxtracks_path = '/hpc/diaggen/software/production/Dx_tracks'

    gatk_bqsr_options = '--known-sites /hpc/diaggen/data/databases/GATK_resource_bundle/b37/1000G_phase1.indels.b37.vcf.gz --known-sites /hpc/diaggen/data/databases/GATK_resource_bundle/b37/dbsnp_137.b37.vcf.gz --known-sites /hpc/diaggen/data/databases/GATK_resource_bundle/b37/Mills_and_1000G_gold_standard.indels.b37.vcf.gz'

    gatk_hc_interval_list = '/hpc/diaggen/data/databases/ref_genomes/Homo_sapiens.GRCh37.GATK.illumina/Homo_sapiens.GRCh37.GATK.illumina.interval_list'
    gatk_hc_options = '-stand-call-conf 10 --pcr-indel-model NONE'
    gatk_ggvcf_options = '--dbsnp /hpc/diaggen/data/databases/GATK_resource_bundle/b37/dbsnp_137.b37.vcf.gz'

    gatk_snp_filter = "-filter 'QD < 2.0' --filter-name SNP_LowQualityDepth -filter 'MQ < 40.0' --filter-name SNP_MappingQuality -filter 'FS > 60.0' --filter-name SNP_StrandBias -filter 'HaplotypeScore > 13.0' --filter-name SNP_HaplotypeScoreHigh -filter 'MQRankSum < -12.5'	--filter-name SNP_MQRankSumLow -filter 'ReadPosRankSum < -8.0'	--filter-name SNP_ReadPosRankSumLow -filter 'MQ0 >= 4 && ((MQ0 / (1.0 * DP)) > 0.1)' --filter-name SNP_HardToValidate -filter 'DP < 5' --filter-name SNP_LowCoverage -filter 'QUAL < 30'	--filter-name SNP_VeryLowQual -filter 'QUAL >= 30.0 && QUAL < 50.0' --filter-name SNP_LowQual -filter 'SOR > 4.0' --filter-name SNP_SOR"
    gatk_snp_cluster = "--cluster-size 3 --cluster-window-size 10"
    gatk_indel_filter = "-filter 'QD < 2.0' --filter-name INDEL_LowQualityDepth -filter 'FS > 200.0' --filter-name INDEL_StrandBias -filter 'ReadPosRankSum < -20.0' --filter-name INDEL_ReadPosRankSumLow -filter 'MQ0 >= 4 && ((MQ0 / (1.0 * DP)) > 0.1)' --filter-name INDEL_HardToValidate -filter 'DP < 5' --filter-name INDEL_LowCoverage -filter 'QUAL < 30.0' --filter-name INDEL_VeryLowQual -filter 'QUAL >= 30.0 && QUAL < 50.0' --filter-name INDEL_LowQual -filter 'SOR > 10.0' --filter-name INDEL_SOR"

    exoncov_path = '/hpc/diaggen/software/production/ExonCov'
    exoncov_bed = 'Tracks/ENSEMBL_UCSC_merged_collapsed_sorted_v3_20bpflank.bed'

    cluster_options = "--account=diaggen"

    gatk_path = '/hpc/local/CentOS7/cog_bioinf/GenomeAnalysisTK-3.8-1-0-gf15c1c3ef/GenomeAnalysisTK.jar'
    fingerprint_target = 'fingerprint/81SNP_design.vcf'
}

process {
    withLabel: BWAMEM2_2_2_1_MEM {
        cpus = 20
        memory = { 50.GB * task.attempt }
        time = { (1.ms * fastq.sum{it.size()} / 4000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:100G"
    }

    withLabel: Sambamba_0_7_0_MarkdupMerge {
        cpus = 10
        memory = { 50.GB * task.attempt }
        time = { (1.ms * bam_files.sum{it.size()} / 7000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:100G"

        publishDir = [
            [pattern: '*.bam*', path: "$params.outdir/bam_files", mode: 'link'],
            [pattern: '*.txt', path: "$params.outdir/QC/Sambamba", mode: 'link']
        ]
    }

    withLabel: GATK_4_3_0_0_BaseRecalibratorApplyBQSR {
        cpus = 4
        memory = { 32.GB * task.attempt }
        time = { (1.ms * bam_file.size() / 4000) * task.attempt }
    }

    withLabel: Sambamba_0_7_0_ViewUnmapped {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { (1.ms * bam_file.size() / 40000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:100G"
    }

    withLabel: Sambamba_0_7_0_Merge {
        cpus = 10
        memory = { 40.GB * task.attempt }
        time = { (1.ms * bam_files.sum{it.size()} / 18000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:100G"
    }

    withLabel: PICARD_3_0_0_IntervalListTools {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { 5.m * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:10G"
    }

    withLabel: GATK_4_3_0_0_HaplotypeCallerGVCF {
        cpus = 2
        memory = { 20.GB * task.attempt }
        time = { (1.ms * bam_file.size() / 5500) * task.attempt }
    }

    withName: GATK_CombineGVCFs {
        cpus = 2
        memory = { 20.GB * task.attempt }
        time = { (1.ms * gvcf_files.sum{it.size()} / 14000) * task.attempt }

        publishDir {
            path = "$params.outdir/gvcf"
            mode = 'link'
        }
    }

    withName: GATK_CombineGVCFsInterval {
        cpus = 2
        memory = { 20.GB * task.attempt }
        time = { (1.ms * gvcf_files.sum{it.size()}) * task.attempt }
    }

    withLabel: GATK_4_3_0_0_GenotypeGVCFs {
        cpus = 2
        memory = { 20.GB * task.attempt }
        time = { 2.h * task.attempt }
    }

    withLabel: PICARD_3_0_0_MergeVcfs {
        cpus = 2
        memory = { 20.GB * task.attempt }
        time = { (1.ms * vcf_files.sum{it.size()} / 2000) * task.attempt }
    }

    withLabel: GATK_4_3_0_0_VariantFiltrationSnpIndel {
        cpus = 2
        memory = { 20.GB * task.attempt }
        time = { (1.ms * vcf_file.size() / 850) * task.attempt }

        publishDir {
            path = "$params.outdir"
            mode = 'link'
        }
    }

    withName: GATK_UnifiedGenotyper_Fingerprint {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { 5.m * task.attempt }

        publishDir {
            path = "$params.outdir/fingerprint"
            mode = 'link'
        }
    }

    withLabel: ExonCov {
        cpus = 4
        memory = { 20.GB * task.attempt }
        time = { (1.ms * bam_file.size() / 24000) * task.attempt }
    }


    withLabel: FASTQC_0_11_8 {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { (1.ms * fastq[0].size() / 3000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:10G"

        publishDir {
            path = "$params.outdir/QC/FastQC"
            mode = 'link'
        }
    }

    withLabel: PICARD_3_0_0_CollectMultipleMetrics {
        cpus = 2
        memory = { 8.GB * task.attempt }
        time = { (1.ms * bam_file.size() / 4000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:10G"

        publishDir {
            path = "$params.outdir/QC/Picard"
            mode = 'link'
        }
    }

    withLabel: Mosdepth_0_3_3 {
        cpus = 4
        memory = { 8.GB * task.attempt }
        time = { (1.ms * bam_file.size() / 4000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:10G"

        publishDir {
            path = "$params.outdir/QC/Mosdepth"
            mode = 'link'
        }
    }

    withLabel: MultiQC_1_14 {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { 5.m * task.attempt }

        publishDir {
            path = "$params.outdir/QC"
            mode = 'link'
        }
    }

    withLabel: VersionLog {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { 5.m * task.attempt }

        publishDir {
            path = "$params.outdir/log"
            mode = 'link'
        }
    }

    withLabel: Workflow_Export_Params {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { 5.m * task.attempt }

        publishDir {
            path = "$params.outdir/log"
            mode = 'link'
        }
    }
}

report {
    enabled = true
    overwrite = true
    file = "$params.outdir/log/nextflow_report.html"
}

trace {
    enabled = true
    overwrite = true
    file = "$params.outdir/log/nextflow_trace.txt"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt'
}

timeline {
    enabled = true
    overwrite = true
    file = "$params.outdir/log/nextflow_timeline.html"
}

profiles {

    slurm {
        process {
            executor = 'slurm'
            queue = 'cpu'
            clusterOptions = "$params.cluster_options"

            errorStrategy = 'retry'
            maxRetries = 1
        }

        singularity {
            enabled = true
            runOptions = '-B /hpc:/hpc -B $TMPDIR:$TMPDIR'
            autoMounts = true
            cacheDir = '/hpc/diaggen/software/singularity_cache'
        }

        executor {
            queueSize = 1000
            pollInterval = '1min'
            queueStatInterval = '5min'
            submitRatelimit = '10sec'
        }

        mail {
            smtp.host = 'localhost'
        }
    }

    mac {
        docker.enabled = true
        docker.runOptions = '-v /Users:/Users'
    }
}
